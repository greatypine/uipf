<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gasq.bdp.logn.mapper.TCustomerConsumptonAmountMapper">
  <resultMap id="BaseResultMap" type="com.gasq.bdp.logn.model.TCustomerConsumptonAmount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="project_amount" jdbcType="DECIMAL" property="projectAmount" />
    <result column="discount" jdbcType="DOUBLE" property="discount" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="arrears" jdbcType="DECIMAL" property="arrears" />
    <result column="repayment" jdbcType="DECIMAL" property="repayment" />
    <result column="move_payment" jdbcType="DECIMAL" property="movePayment" />
    <result column="cash_income" jdbcType="DECIMAL" property="cashIncome" />
    <result column="credit_cash_income" jdbcType="DECIMAL" property="creditCashIncome" />
    <result column="createUser" jdbcType="VARCHAR" property="createuser" />
    <result column="updateUser" jdbcType="VARCHAR" property="updateuser" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="deadline" jdbcType="INTEGER" property="deadline" />
    <result column="project_nums" jdbcType="INTEGER" property="projectNums" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, customer_id, project_id, project_amount, discount, total_amount, arrears, repayment, 
    move_payment, cash_income, credit_cash_income, createUser, updateUser, createTime, 
    updateTime, remark, deadline, project_nums
  </sql>
  <select id="selectByExample" parameterType="com.gasq.bdp.logn.model.TCustomerConsumptonAmountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_customer_consumpton_amount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_customer_consumpton_amount
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_customer_consumpton_amount
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gasq.bdp.logn.model.TCustomerConsumptonAmountExample">
    delete from t_customer_consumpton_amount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.gasq.bdp.logn.model.TCustomerConsumptonAmount">
    insert into t_customer_consumpton_amount (id, customer_id, project_id, 
      project_amount, discount, total_amount, 
      arrears, repayment, move_payment, 
      cash_income, credit_cash_income, createUser, 
      updateUser, createTime, updateTime, 
      remark, deadline, project_nums
      )
    values (#{id,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, 
      #{projectAmount,jdbcType=DECIMAL}, #{discount,jdbcType=DOUBLE}, #{totalAmount,jdbcType=DECIMAL}, 
      #{arrears,jdbcType=DECIMAL}, #{repayment,jdbcType=DECIMAL}, #{movePayment,jdbcType=DECIMAL}, 
      #{cashIncome,jdbcType=DECIMAL}, #{creditCashIncome,jdbcType=DECIMAL}, #{createuser,jdbcType=VARCHAR}, 
      #{updateuser,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{deadline,jdbcType=INTEGER}, #{projectNums,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.gasq.bdp.logn.model.TCustomerConsumptonAmount">
    insert into t_customer_consumpton_amount
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="projectAmount != null">
        project_amount,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="arrears != null">
        arrears,
      </if>
      <if test="repayment != null">
        repayment,
      </if>
      <if test="movePayment != null">
        move_payment,
      </if>
      <if test="cashIncome != null">
        cash_income,
      </if>
      <if test="creditCashIncome != null">
        credit_cash_income,
      </if>
      <if test="createuser != null">
        createUser,
      </if>
      <if test="updateuser != null">
        updateUser,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="projectNums != null">
        project_nums,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="projectAmount != null">
        #{projectAmount,jdbcType=DECIMAL},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DOUBLE},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="arrears != null">
        #{arrears,jdbcType=DECIMAL},
      </if>
      <if test="repayment != null">
        #{repayment,jdbcType=DECIMAL},
      </if>
      <if test="movePayment != null">
        #{movePayment,jdbcType=DECIMAL},
      </if>
      <if test="cashIncome != null">
        #{cashIncome,jdbcType=DECIMAL},
      </if>
      <if test="creditCashIncome != null">
        #{creditCashIncome,jdbcType=DECIMAL},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=INTEGER},
      </if>
      <if test="projectNums != null">
        #{projectNums,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gasq.bdp.logn.model.TCustomerConsumptonAmountExample" resultType="java.lang.Long">
    select count(*) from t_customer_consumpton_amount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective"  useGeneratedKeys="true" keyProperty="id" parameterType="map">
    update t_customer_consumpton_amount
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.projectAmount != null">
        project_amount = #{record.projectAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=DOUBLE},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.arrears != null">
        arrears = #{record.arrears,jdbcType=DECIMAL},
      </if>
      <if test="record.repayment != null">
        repayment = #{record.repayment,jdbcType=DECIMAL},
      </if>
      <if test="record.movePayment != null">
        move_payment = #{record.movePayment,jdbcType=DECIMAL},
      </if>
      <if test="record.cashIncome != null">
        cash_income = #{record.cashIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.creditCashIncome != null">
        credit_cash_income = #{record.creditCashIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.createuser != null">
        createUser = #{record.createuser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateuser != null">
        updateUser = #{record.updateuser,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.deadline != null">
        deadline = #{record.deadline,jdbcType=INTEGER},
      </if>
      <if test="record.projectNums != null">
        project_nums = #{record.projectNums,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_customer_consumpton_amount
    set id = #{record.id,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      project_amount = #{record.projectAmount,jdbcType=DECIMAL},
      discount = #{record.discount,jdbcType=DOUBLE},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      arrears = #{record.arrears,jdbcType=DECIMAL},
      repayment = #{record.repayment,jdbcType=DECIMAL},
      move_payment = #{record.movePayment,jdbcType=DECIMAL},
      cash_income = #{record.cashIncome,jdbcType=DECIMAL},
      credit_cash_income = #{record.creditCashIncome,jdbcType=DECIMAL},
      createUser = #{record.createuser,jdbcType=VARCHAR},
      updateUser = #{record.updateuser,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      deadline = #{record.deadline,jdbcType=INTEGER},
      project_nums = #{record.projectNums,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.gasq.bdp.logn.model.TCustomerConsumptonAmount">
    update t_customer_consumpton_amount
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="projectAmount != null">
        project_amount = #{projectAmount,jdbcType=DECIMAL},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=DOUBLE},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="arrears != null">
        arrears = #{arrears,jdbcType=DECIMAL},
      </if>
      <if test="repayment != null">
        repayment = #{repayment,jdbcType=DECIMAL},
      </if>
      <if test="movePayment != null">
        move_payment = #{movePayment,jdbcType=DECIMAL},
      </if>
      <if test="cashIncome != null">
        cash_income = #{cashIncome,jdbcType=DECIMAL},
      </if>
      <if test="creditCashIncome != null">
        credit_cash_income = #{creditCashIncome,jdbcType=DECIMAL},
      </if>
      <if test="createuser != null">
        createUser = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="updateuser != null">
        updateUser = #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=INTEGER},
      </if>
      <if test="projectNums != null">
        project_nums = #{projectNums,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gasq.bdp.logn.model.TCustomerConsumptonAmount">
    update t_customer_consumpton_amount
    set customer_id = #{customerId,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=INTEGER},
      project_amount = #{projectAmount,jdbcType=DECIMAL},
      discount = #{discount,jdbcType=DOUBLE},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      arrears = #{arrears,jdbcType=DECIMAL},
      repayment = #{repayment,jdbcType=DECIMAL},
      move_payment = #{movePayment,jdbcType=DECIMAL},
      cash_income = #{cashIncome,jdbcType=DECIMAL},
      credit_cash_income = #{creditCashIncome,jdbcType=DECIMAL},
      createUser = #{createuser,jdbcType=VARCHAR},
      updateUser = #{updateuser,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      deadline = #{deadline,jdbcType=INTEGER},
      project_nums = #{projectNums,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.gasq.bdp.logn.model.TCustomerConsumptonAmountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_customer_consumpton_amount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="queryPagingList" parameterType="com.gasq.bdp.logn.model.TCustomerConsumptonAmount" resultType="java.util.Map">
 		SELECT
			a.id,
			a.customer_id as customerId,
			a.project_id as projectId,
			p.project_name as projectName,
			a.project_amount projectAmount,
			a.discount,
			a.total_amount as totalAmount,
			a.arrears,
			a.repayment,
			a.move_payment movePayment,
			a.cash_income cashIncome,
			a.credit_cash_income creditCashIncome,
			a.createUser,
			a.updateUser,
			a.createTime,
			a.updateTime,
			a.project_nums as projectNums,
			a.deadline,
			a.remark
		from t_customer_consumpton_amount a 
		left join t_project p on a.project_id = p.id
		<if test="record.companyid !=null">
		 and p.company_id=#{record.companyid}
		</if>
		where 1=1 
 		<if test="record.customerId &gt; 0 and record.customerId!=null">
			and a.customer_id=#{record.customerId}
 		</if>
		order by a.updateTime desc 
 </select>
</mapper>