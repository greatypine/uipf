<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gasq.bdp.logn.mapper.TVipCustomerMapper">
  <resultMap id="BaseResultMap" type="com.gasq.bdp.logn.model.TVipCustomer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="brithday" jdbcType="DATE" property="brithday" />
    <result column="province_id" jdbcType="INTEGER" property="provinceId" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="county_id" jdbcType="INTEGER" property="countyId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="actual_amount" jdbcType="DECIMAL" property="actualAmount" />
    <result column="give_amount" jdbcType="DECIMAL" property="giveAmount" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, customer_name, customer_phone, email, sex, brithday, province_id, city_id, county_id, 
    address, type, status, actual_amount, give_amount, company_id, create_user, create_time, 
    update_user, update_time, remark
  </sql>
  <select id="selectByExample" parameterType="com.gasq.bdp.logn.model.TVipCustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_vip_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_vip_customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_vip_customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gasq.bdp.logn.model.TVipCustomerExample">
    delete from t_vip_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gasq.bdp.logn.model.TVipCustomer">
    insert into t_vip_customer (id, customer_name, customer_phone, 
      email, sex, brithday, 
      province_id, city_id, county_id, 
      address, type, status, 
      actual_amount, give_amount, company_id, 
      create_user, create_time, update_user, 
      update_time, remark)
    values (#{id,jdbcType=INTEGER}, #{customerName,jdbcType=VARCHAR}, #{customerPhone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{brithday,jdbcType=DATE}, 
      #{provinceId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{countyId,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{actualAmount,jdbcType=DECIMAL}, #{giveAmount,jdbcType=DECIMAL}, #{companyId,jdbcType=INTEGER}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.gasq.bdp.logn.model.TVipCustomer">
    insert into t_vip_customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="brithday != null">
        brithday,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="countyId != null">
        county_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="actualAmount != null">
        actual_amount,
      </if>
      <if test="giveAmount != null">
        give_amount,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="brithday != null">
        #{brithday,jdbcType=DATE},
      </if>
      <if test="provinceId != null">
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="countyId != null">
        #{countyId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="giveAmount != null">
        #{giveAmount,jdbcType=DECIMAL},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gasq.bdp.logn.model.TVipCustomerExample" resultType="java.lang.Long">
    select count(*) from t_vip_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_vip_customer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerPhone != null">
        customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.brithday != null">
        brithday = #{record.brithday,jdbcType=DATE},
      </if>
      <if test="record.provinceId != null">
        province_id = #{record.provinceId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.countyId != null">
        county_id = #{record.countyId,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.actualAmount != null">
        actual_amount = #{record.actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.giveAmount != null">
        give_amount = #{record.giveAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_vip_customer
    set id = #{record.id,jdbcType=INTEGER},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      brithday = #{record.brithday,jdbcType=DATE},
      province_id = #{record.provinceId,jdbcType=INTEGER},
      city_id = #{record.cityId,jdbcType=INTEGER},
      county_id = #{record.countyId,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      actual_amount = #{record.actualAmount,jdbcType=DECIMAL},
      give_amount = #{record.giveAmount,jdbcType=DECIMAL},
      company_id = #{record.companyId,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gasq.bdp.logn.model.TVipCustomer">
    update t_vip_customer
    <set>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="brithday != null">
        brithday = #{brithday,jdbcType=DATE},
      </if>
      <if test="provinceId != null">
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="countyId != null">
        county_id = #{countyId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="actualAmount != null">
        actual_amount = #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="giveAmount != null">
        give_amount = #{giveAmount,jdbcType=DECIMAL},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gasq.bdp.logn.model.TVipCustomer">
    update t_vip_customer
    set customer_name = #{customerName,jdbcType=VARCHAR},
      customer_phone = #{customerPhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      brithday = #{brithday,jdbcType=DATE},
      province_id = #{provinceId,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      county_id = #{countyId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      actual_amount = #{actualAmount,jdbcType=DECIMAL},
      give_amount = #{giveAmount,jdbcType=DECIMAL},
      company_id = #{companyId,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.gasq.bdp.logn.model.TVipCustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_vip_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="queryPagingList" parameterType="com.gasq.bdp.logn.model.TLtnCustomer" resultType="java.util.Map">
 		SELECT
			a.id,
			a.company_id as companyId,
			u.nickname as createUser,
			DATE_FORMAT(a.brithday,'%Y-%m-%d') as brithday,
			a.email,
			a.province_id as provinceId,
			a.city_id as cityId,
			a.county_id as countyId,
			a.address,
			a.customer_name as customerName,
			a.customer_phone as customerPhone,
			a.sex,
			vs.text as sexName,
			a.`status`,
			vvcs.`name` as statusName,
			vvct.`name` as typeName,
			DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i:%S')as createTime,
			a.give_amount as giveAmount,
			a.actual_amount as actualAmount,
			a.update_user as updateUser,
			DATE_FORMAT(a.update_time,'%Y-%m-%d %H:%i:%S')as updateTime,
			tp.`name` as provinceName,
			tc.name as cityName,
			tcy.name as countyName,
			concat(ifnull(tp.`name`,''),ifnull(tc.`name`,''),ifnull(tcy.`name`,''),ifnull(a.address,''))as alladdress
		from t_vip_customer a 
		LEFT JOIN t_sys_user u on a.create_user=u.username
		<if test="record.companyId !=null">
		 and u.companyid=#{record.companyId}
		</if>
		left join t_company c on a.company_id = c.id
		left join v_sex vs on a.sex=vs.value
		<if test="record.companyId !=null">
		 and vs.companyid=#{record.companyId}
		</if>
		LEFT JOIN v_vip_customer_status vvcs on a.`status` = vvcs.`value`
		<if test="record.companyId !=null">
		 and vvcs.companyid=#{record.companyId}
		</if>
		LEFT JOIN v_vip_customer_type vvct on a.type = vvct.`value`
		<if test="record.companyId !=null">
		 and vvct.companyid=#{record.companyId}
		</if>
		LEFT JOIN t_province tp on a.province_id=tp.id
		LEFT JOIN t_city tc on a.city_id = tc.id
		LEFT JOIN t_county tcy on a.county_id = tcy.id
		where 1=1 
 		<if test="record.companyId &gt; 0 and record.companyId!=null">
			and a.company_id=#{record.companyId}
 		</if>
 		<if test="record.customerPhone !='' and record.customerPhone!=null">
			and a.customer_phone like concat(#{record.customerPhone},'%')
 		</if>
 		<if test="record.customerName !='' and record.customerName!=null">
			and a.customer_name like concat(#{record.customerName},'%')
 		</if>
 		<if test="record.statuss!=null">
			and a.status in
			<foreach item="item" index="index" collection="record.statuss" 
                         open="(" separator="," close=")">
                        #{item}
            </foreach>
 		</if>
 		<if test="record.type!=null">
			and a.type = #{record.type}
 		</if>
 		<if test="record.id!=null">
			and a.id = #{record.id}
 		</if>
 		<if test="record.createTime!=null">
			and a.create_time &gt;= #{record.createTime}
 		</if>
 		<if test="record.endtime!=null">
			and a.create_time &lt;= #{record.createTime}
 		</if>
		order by a.update_time desc 
		<if test="record.rows !=null and record.page!=null">
			limit #{record.page},#{record.rows}
		</if>
 </select>
 
 <select id="queryMapGridList" parameterType="com.gasq.bdp.logn.model.TLtnCustomer" resultType="java.util.Map">
 		SELECT
			a.customer_name,a.accountBalance,a.customer_phone,tcpy.`name` as companyName,
			a.totalConsumptonAmount,
			DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i:%S') createTime,a.id
			,'closed' as state,0 as parendId,a.type,vct.text as consumeName
		FROM
			t_customer_consumpton_log a
		INNER JOIN t_vip_customer b on a.customer_phone=a.customer_phone
		LEFT JOIN v_vip_customer_type vvct on b.type = vvct.`value`
		left join v_sex vs on b.sex=vs.value
		left join t_company tcpy on a.company_id = tcpy.id
		LEFT JOIN v_consume_type vct on a.type = vct.`value` and a.company_id = vct.companyid
		where 1=1 
 		<if test="record.customerPhone !='' and record.customerPhone!=null">
			and a.customer_phone = #{record.customerPhone}
 		</if>
		GROUP BY a.id,a.company_id,a.create_time,vct.text
		order by a.create_time desc
 </select>
 
 <select id="queryMapGridChildren" parameterType="java.util.HashMap" resultType="java.util.Map">
 		SELECT
			a.id,
			tvc.customer_name,
			p.project_name as projectName,
			tlc.accountBalance,
			tvc.customer_phone,
			a.total_amount as totalConsumptonAmount,
			DATE_FORMAT(a.createTime,'%Y-%m-%d %H:%i:%S') createTime,
			GROUP_CONCAT(ti.`name`) products,
			tlc.type,
			tcpy.`name` as companyName
		from t_ltn_customer_consumpton_amount a 
		INNER JOIN t_customer_consumpton_log tlc on a.customer_id=tlc.id
		left join t_project p on a.project_id = p.id and p.company_id=tlc.company_id
		INNER JOIN t_vip_customer tvc on tlc.customer_phone=tvc.customer_phone
		LEFT JOIN t_consumpton_project tcp on a.id = tcp.consumpton_amount_id
		LEFT JOIN t_inventory ti on tcp.project_id=ti.id and ti.companyid=tlc.company_id
		LEFT JOIN t_company tcpy on tlc.company_id=tcpy.id
		where 1=1 
		<if test="record.companyid !=null">
		 and p.company_id=#{record.companyid}
		</if>
 		<if test="record.customerId &gt; 0 and record.customerId!=null">
			and a.customer_id=#{record.customerId}
 		</if>
		GROUP BY a.id,p.id,tlc.id,tlc.create_time,tvc.id
		order by a.updateTime desc 
 </select>
</mapper>