<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gasq.bdp.logn.mapper.TInventoryMapper">
  <resultMap id="BaseResultMap" type="com.gasq.bdp.logn.model.TInventory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="factory" jdbcType="VARCHAR" property="factory" />
    <result column="inventory" jdbcType="DECIMAL" property="inventory" />
    <result column="units" jdbcType="VARCHAR" property="units" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createUser" jdbcType="VARCHAR" property="createuser" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateUser" jdbcType="VARCHAR" property="updateuser" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="companyid" jdbcType="INTEGER" property="companyid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, code, factory, inventory, units, price, status, createUser, createTime, 
    updateUser, updateTime, companyid
  </sql>
  <select id="selectByExample" parameterType="com.gasq.bdp.logn.model.TInventoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_inventory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_inventory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gasq.bdp.logn.model.TInventoryExample">
    delete from t_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gasq.bdp.logn.model.TInventory">
    insert into t_inventory (id, name, code, 
      factory, inventory, units, 
      price, status, createUser, 
      createTime, updateUser, updateTime, 
      companyid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{factory,jdbcType=VARCHAR}, #{inventory,jdbcType=DECIMAL}, #{units,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{createuser,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updateuser,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{companyid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.gasq.bdp.logn.model.TInventory">
    insert into t_inventory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="factory != null">
        factory,
      </if>
      <if test="inventory != null">
        inventory,
      </if>
      <if test="units != null">
        units,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createuser != null">
        createUser,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updateuser != null">
        updateUser,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="companyid != null">
        companyid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="factory != null">
        #{factory,jdbcType=VARCHAR},
      </if>
      <if test="inventory != null">
        #{inventory,jdbcType=DECIMAL},
      </if>
      <if test="units != null">
        #{units,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gasq.bdp.logn.model.TInventoryExample" resultType="java.lang.Long">
    select count(*) from t_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_inventory
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.factory != null">
        factory = #{record.factory,jdbcType=VARCHAR},
      </if>
      <if test="record.inventory != null">
        inventory = #{record.inventory,jdbcType=DECIMAL},
      </if>
      <if test="record.units != null">
        units = #{record.units,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createuser != null">
        createUser = #{record.createuser,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateuser != null">
        updateUser = #{record.updateuser,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.companyid != null">
        companyid = #{record.companyid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_inventory
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      factory = #{record.factory,jdbcType=VARCHAR},
      inventory = #{record.inventory,jdbcType=DECIMAL},
      units = #{record.units,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      createUser = #{record.createuser,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateUser = #{record.updateuser,jdbcType=VARCHAR},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      companyid = #{record.companyid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gasq.bdp.logn.model.TInventory">
    update t_inventory
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="factory != null">
        factory = #{factory,jdbcType=VARCHAR},
      </if>
      <if test="inventory != null">
        inventory = #{inventory,jdbcType=DECIMAL},
      </if>
      <if test="units != null">
        units = #{units,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createuser != null">
        createUser = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null">
        updateUser = #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="companyid != null">
        companyid = #{companyid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gasq.bdp.logn.model.TInventory">
    update t_inventory
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      factory = #{factory,jdbcType=VARCHAR},
      inventory = #{inventory,jdbcType=DECIMAL},
      units = #{units,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      createUser = #{createuser,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateUser = #{updateuser,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      companyid = #{companyid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.gasq.bdp.logn.model.TInventoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="queryPagingList" parameterType="java.util.HashMap" resultType="java.util.Map">
	SELECT
		p.id,p.companyid,p.`code`,p.`name`,p.factory,p.inventory,p.price,p.`status`,p.units,p.createuser,p.createtime,tc.`name` as companyName,p.updatetime,p.updateuser
	FROM
		`t_inventory` p
	LEFT JOIN t_company tc on p.companyid=tc.id
	where 1=1  
	<if test="name !=null and name!=''">
		and p.name like concat('%',#{name},'%')
	</if>
	<if test="factory !=null and factory!=''">
		and p.factory like concat('%',#{factory},'%')
	</if>
	<if test="status !=null">
		and p.status=#{status}
	</if>
	<if test="companyid !=null">
		and p.companyid=#{companyid}
	</if>
	order by p.updateTime desc 
	<if test="index !=null and pageSize!=null">
		limit #{index},#{pageSize}
	</if>
</select>
  
</mapper>