<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gasq.bdp.logn.mapper.TCustomerSubscribeMapper">
  <resultMap id="BaseResultMap" type="com.gasq.bdp.logn.model.TCustomerSubscribe">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="root_in" jdbcType="INTEGER" property="rootIn" />
    <result column="profession" jdbcType="INTEGER" property="profession" />
    <result column="project" jdbcType="VARCHAR" property="project" />
    <result column="subscribe_date" jdbcType="TIMESTAMP" property="subscribeDate" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, customer_name, customer_phone, email, sex, root_in, profession, project, subscribe_date, 
    company_id, status, create_user, create_time, update_user, update_time, remark
  </sql>
  <select id="selectByExample" parameterType="com.gasq.bdp.logn.model.TCustomerSubscribeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_customer_subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_customer_subscribe
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_customer_subscribe
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gasq.bdp.logn.model.TCustomerSubscribeExample">
    delete from t_customer_subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gasq.bdp.logn.model.TCustomerSubscribe">
    insert into t_customer_subscribe (id, customer_name, customer_phone, 
      email, sex, root_in, 
      profession, project, subscribe_date, 
      company_id, status, create_user, 
      create_time, update_user, update_time, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{customerName,jdbcType=VARCHAR}, #{customerPhone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{rootIn,jdbcType=INTEGER}, 
      #{profession,jdbcType=INTEGER}, #{project,jdbcType=VARCHAR}, #{subscribeDate,jdbcType=TIMESTAMP}, 
      #{companyId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.gasq.bdp.logn.model.TCustomerSubscribe">
    insert into t_customer_subscribe
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="rootIn != null">
        root_in,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="project != null">
        project,
      </if>
      <if test="subscribeDate != null">
        subscribe_date,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="rootIn != null">
        #{rootIn,jdbcType=INTEGER},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=INTEGER},
      </if>
      <if test="project != null">
        #{project,jdbcType=VARCHAR},
      </if>
      <if test="subscribeDate != null">
        #{subscribeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gasq.bdp.logn.model.TCustomerSubscribeExample" resultType="java.lang.Long">
    select count(*) from t_customer_subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_customer_subscribe
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerPhone != null">
        customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.rootIn != null">
        root_in = #{record.rootIn,jdbcType=INTEGER},
      </if>
      <if test="record.profession != null">
        profession = #{record.profession,jdbcType=INTEGER},
      </if>
      <if test="record.project != null">
        project = #{record.project,jdbcType=VARCHAR},
      </if>
      <if test="record.subscribeDate != null">
        subscribe_date = #{record.subscribeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_customer_subscribe
    set id = #{record.id,jdbcType=INTEGER},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      root_in = #{record.rootIn,jdbcType=INTEGER},
      profession = #{record.profession,jdbcType=INTEGER},
      project = #{record.project,jdbcType=VARCHAR},
      subscribe_date = #{record.subscribeDate,jdbcType=TIMESTAMP},
      company_id = #{record.companyId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gasq.bdp.logn.model.TCustomerSubscribe">
    update t_customer_subscribe
    <set>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="rootIn != null">
        root_in = #{rootIn,jdbcType=INTEGER},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=INTEGER},
      </if>
      <if test="project != null">
        project = #{project,jdbcType=VARCHAR},
      </if>
      <if test="subscribeDate != null">
        subscribe_date = #{subscribeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gasq.bdp.logn.model.TCustomerSubscribe">
    update t_customer_subscribe
    set customer_name = #{customerName,jdbcType=VARCHAR},
      customer_phone = #{customerPhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      root_in = #{rootIn,jdbcType=INTEGER},
      profession = #{profession,jdbcType=INTEGER},
      project = #{project,jdbcType=VARCHAR},
      subscribe_date = #{subscribeDate,jdbcType=TIMESTAMP},
      company_id = #{companyId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.gasq.bdp.logn.model.TCustomerSubscribeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_customer_subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="queryPagingList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		p.id,p.company_id as companyId,p.create_time as createTime,p.create_user as createUser,p.customer_name customerName,p.customer_phone as customerPhone,p.project,p.remark,p.root_in as rootIn,
		p.sex as sex,DATE_FORMAT(p.subscribe_date,'%Y-%m-%d %H:%i:%s') as subscribeDate,p.update_time as updateTime,p.update_user as updateUser,p.status,vsb.text statusName,
		tc.`name` as companyName,vri.`name` as rootInName,p.email,p.profession,vcp.text as professionName
	FROM
		t_customer_subscribe p
	LEFT JOIN v_customer_profession vcp on p.profession=vcp.value
	INNER JOIN t_company tc on p.company_id=tc.id and tc.`status`=1
	LEFT JOIN v_root_in vri on p.root_in=vri.`value`
	<if test="companyid !=null">
	 and vri.companyid=#{companyid}
	</if>
	LEFT JOIN v_subscribe vsb on p.status=vsb.`value`
	<if test="companyid !=null">
	 and vsb.companyid=#{companyid}
	</if> 
	where 1=1 
	<if test="customername !=null and customername!=''">
		and p.customer_name like concat('%',#{customername},'%')
	</if>
	<if test="customerphone !=null and customerphone!=''">
		and p.customer_phone like concat('%',#{customerphone},'%')
	</if>
	<if test="updatetime !=null and updatetime!=''">
		and p.update_time &gt;= #{updatetime}
	</if>
	<if test="remark !=null">
		and p.remark like concat('%',#{remark},'%')
	</if>
	<if test="companyid !=null">
		and p.company_id=#{companyid}
	</if>
	<if test="status !=null">
		and p.status=#{status}
	</if>
	order by p.create_time desc 
	<if test="index !=null and pageSize!=null">
		limit #{index},#{pageSize}
	</if>
</select>
<select id="countByBean" parameterType="java.util.HashMap" resultType="java.lang.Integer">
	select count(*) from (
		SELECT
			p.id
		FROM
			t_customer_subscribe p
		INNER JOIN t_company tc on p.company_id=tc.id and tc.`status`=1
		LEFT JOIN v_root_in vri on p.root_in=vri.`value`
		<if test="companyid !=null">
		 and vri.companyid=#{companyid}
		</if>
		LEFT JOIN v_subscribe vsb on p.status=vsb.`value`
		<if test="companyid !=null">
		 and vsb.companyid=#{companyid}
		</if> 
		where 1=1 
		<if test="customername !=null and customername!=''">
			and p.customer_name like concat('%',#{customername},'%')
		</if>
		<if test="customerphone !=null and customerphone!=''">
			and p.customer_phone like concat('%',#{customerphone},'%')
		</if>
		<if test="updatetime !=null and updatetime!=''">
			and p.update_time &gt;= #{updatetime}
		</if>
		<if test="remark !=null">
			and p.remark like concat('%',#{remark},'%')
		</if>
		<if test="companyid !=null">
			and p.company_id=#{companyid}
		</if>
		<if test="status !=null">
			and p.status=#{status}
		</if>
	) temp
</select>
<!-- <select id="querySubscribeReceptionInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap"> -->
<!-- 	SELECT -->
<!-- 		GROUP_CONCAT(a.customer_name) customer_name -->
<!-- 		, DATE_FORMAT(a.update_time, '%Y-%m-%d') datetime -->
<!-- 	FROM -->
<!-- 		t_customer_subscribe a -->
<!-- 	WHERE -->
<!-- 		a.`status` = 1 -->
<!-- 	AND (a.subscribe_date &lt;= now() or a.subscribe_date is null) -->
<!-- 	AND DATE_FORMAT(a.update_time, '%Y-%m-%d') = DATE_FORMAT(now(),'%Y-%m-%d') -->
<!-- 	GROUP BY DATE_FORMAT(a.update_time, '%Y-%m-%d') -->
<!-- </select> -->
<select id="querySubscribeReceptionInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		GROUP_CONCAT(a.customer_name ORDER BY a.create_time) customer_name
		, DATE_FORMAT(a.create_time, '%Y-%m-%d') datetime
		,tsu.nickname,
		(select count(*) from t_customer_subscribe b where b.`status` = 1 and b.subscribe_date= DATE_FORMAT(DATE_SUB(curdate(),INTERVAL 1 DAY),'%Y-%m-%d')) jiezhennumbs
	FROM
		t_customer_subscribe a
	LEFT JOIN t_sys_user tsu  on a.create_user = tsu.username
	WHERE
		a.`status` = 0 and a.create_user = 'yuj'
	AND (a.subscribe_date &lt;= DATE_FORMAT(DATE_SUB(curdate(),INTERVAL 1 DAY),'%Y-%m-%d') or a.subscribe_date is null)
	 AND DATE_FORMAT(a.create_time, '%Y-%m-%d') &lt;= DATE_FORMAT(DATE_SUB(curdate(),INTERVAL 1 DAY),'%Y-%m-%d')
	GROUP BY DATE_FORMAT(a.create_time, '%Y-%m-%d'),tsu.nickname;
</select>

<select id="querySubscribeInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		GROUP_CONCAT(a.customer_name ORDER BY a.create_time) customer_name
		, DATE_FORMAT(a.create_time, '%Y-%m-%d') datetime,
		(select count(*) from t_customer_subscribe b where b.`status` = 0 and b.company_id=#{companyid} and b.subscribe_date= DATE_FORMAT(now(),'%Y-%m-%d')) daozhennumbs,
		tsu.nickname
	FROM
		t_customer_subscribe a
		LEFT JOIN t_sys_user tsu on a.create_user = tsu.username
	WHERE
		a.`status` = 0 and a.company_id=#{companyid}
	AND DATE_FORMAT(a.create_time, '%Y-%m-%d') = DATE_FORMAT(now(),'%Y-%m-%d')
	GROUP BY DATE_FORMAT(a.create_time, '%Y-%m-%d'),tsu.nickname
</select>
</mapper>